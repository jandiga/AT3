BEGIN Player_System

  CLASS Player
    ATTRIBUTES:
      playerID, name, role = "Student"
      teamIDs, totalScore = 0
      academicScore = 0, effortScore = 0
      performanceBonuses = 0
      academicHistory = []  # Tracks academic scores over time
      weeklyEffortContributions = []  # Tracks weekly effort points
      createdByTeacherID, classCode
      isEligibleForDraft = TRUE

    # // Player Creation and Management Methods
    STATIC FUNCTION CreatePlayer(teacherID, studentName, classCode)
      # Checks teacher permissions, initializes a new player, and stores it in the system.
    END FUNCTION

    FUNCTION GetStats(requestingUserID)
      # Returns basic stats. If requested by a teacher or authorized user, includes detailed performance history.
    END FUNCTION

    # // Grade and Performance Methods
    FUNCTION ConvertGradeToScore(gradeInput)
      # Converts letter grades, percentages, and fraction-based scores into a numeric value.
    END FUNCTION

    FUNCTION UpdateAcademicPerformance(gradeInput)
      # Updates academic scores, tracks improvement, and applies bonuses for high grades.
    END FUNCTION

    FUNCTION UpdateEffortMetrics(homeworkCompleted, classParticipation)
      # Calculates effort points based on completed homework and class participation.
    END FUNCTION

    FUNCTION GetRecentImprovement()
      # Returns the percentage improvement compared to the last recorded score.
    END FUNCTION

    FUNCTION GetLastWeekContribution()
      # Retrieves the effort points earned in the most recent week.
    END FUNCTION

    FUNCTION ApplyPerformanceBonuses(isMostImproved, isTopPerformer)
      # Grants bonus points for improvement and top performance.
    END FUNCTION

    FUNCTION CalculateTotalScore()
      # Computes the total score based on academic, effort, and bonus points.
    END FUNCTION

    FUNCTION ContributeToTeamScore(team)
      # Adds the player's total score to their teamâ€™s cumulative score.
    END FUNCTION
  END CLASS

END Player_System
