<%- include('header.ejs') %>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3>Create New Player Profile</h3>
                </div>
                <div class="card-body">
                    <% if (typeof error !== 'undefined' && error) { %>
                        <div class="alert alert-danger">
                            <%= error %>
                        </div>
                    <% } %>
                    
                    <% if (typeof success !== 'undefined' && success) { %>
                        <div class="alert alert-success">
                            <%= success %>
                            <% if (typeof playerId !== 'undefined' && playerId) { %>
                                <div class="mt-2">
                                    <strong>Player ID:</strong> 
                                    <div class="input-group mb-3">
                                        <input type="text" class="form-control" id="playerIdField" 
                                               value="<%= playerId %>" readonly>
                                        <button class="btn btn-outline-secondary" type="button" 
                                                onclick="copyToClipboard()">Copy</button>
                                    </div>
                                    <small>Share this ID with the student to link their account</small>
                                </div>
                            <% } %>
                        </div>
                    <% } %>
                    
                    <form action="/api/players/create" method="POST" id="playerForm">
                        <div class="mb-3">
                            <label for="studentName" class="form-label">Student Name</label>
                            <input type="text" class="form-control" id="studentName" name="studentName" required>
                        </div>
                        
                        <div class="mb-3">
                            <label for="classCode" class="form-label">Class Code</label>
                            <input type="text" class="form-control" id="classCode" name="classCode" value="<%= user.classCode || '' %>" required>
                        </div>
                        
                        <div class="mb-3">
                            <label for="notes" class="form-label">Additional Notes</label>
                            <textarea class="form-control" id="notes" name="notes" rows="4"></textarea>
                        </div>

                        <div class="d-flex justify-content-between">
                            <button type="submit" class="btn btn-primary">Create Player</button>
                            <a href="/dashboard" class="btn btn-secondary">Back to Dashboard</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function copyToClipboard() {
    const playerIdField = document.getElementById('playerIdField');
    playerIdField.select();
    document.execCommand('copy');
    
    // Show feedback
    const button = document.querySelector('.input-group button');
    const originalText = button.textContent;
    button.textContent = 'Copied!';
    button.classList.add('btn-success');
    
    setTimeout(() => {
        button.textContent = originalText;
        button.classList.remove('btn-success');
    }, 2000);
}

document.getElementById('playerForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const data = Object.fromEntries(formData.entries());
    
    // Convert checkbox value to boolean
    data.isEligibleForDraft = formData.has('isEligibleForDraft');
    
    try {
        const response = await fetch('/api/players/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
            window.location.href = `/create-player?success=Player created successfully&playerId=${result.playerId}`;
        } else {
            const errorDiv = document.createElement('div');
            errorDiv.className = 'alert alert-danger';
            errorDiv.textContent = result.error || 'Failed to create player';
            
            const cardBody = document.querySelector('.card-body');
            cardBody.insertBefore(errorDiv, cardBody.firstChild);
            
            // Remove the error after 5 seconds
            setTimeout(() => {
                errorDiv.remove();
            }, 5000);
        }
    } catch (error) {
        console.error('Error creating player:', error);
    }
});
</script>

<%- include('footer.ejs') %>